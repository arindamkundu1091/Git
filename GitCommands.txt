All Git Commands:-

1) git config --global user.name "username" = to configure user name
2) git config --global user.email "useremailid" = to configure user email
3) git config --list = to show the user details list
4) git config user.name = to show the user name
5) git config user.email = to show the user email
6) git status = to show the repository status
7) git init = to initialize git repository
8) git add --a = to add/staged all untracked files
9) git add filename = to add/staged a specific file using filename
10) git commit -m "commit details" = to add commit and finalize to git directory
11) git log = to show the logs and commits
12) rm -rf .git = to delete all .git files
13) git clone repourl ownreponame = to clone a git repo and change its name
14) git config <global/ocal> core.autocrlf true/false = to change crlf
15) git config core.autocrlf = to show crf
16) git log | less = to show the log in list mode
17) git remote set-url origin https://github.com/username/reponame.git = to open remote repo
18) git push origin master = to push the changes to master or sync the changes
19) git diff = to cmpare working directory with staging area
20) git diff --staged = to compare staging area with last commit
21) git commit -a -m "Commit" = to direct commit the tracked file without staging
22) git rm filename = to remove a file and staged it
23) git mv oldname newname = to rename a file and staged it
24) git rm --cached filename = to untrack a tracked file
25) git log -p = to show the details of every commits
26) git log -p -n(n=1,,3,4...) = to show the details of n numbr of commits
27) git log --stat = to show the details in short of every commits
28) git log --pretty=oneline(online/short/full) = to show the all commits in online
29) git log -since=2.days(days/months/weeks/years) = to show the log 2 days before
30) git log --pretty=format:"%h --%an" = to show the log in a specific format
31) git commit --amend = to change/amend a commit in vim
32) git restore --staged filename = to unstage a staged file
33) git restore filename = to discard the changes in the file
34) git checkout -- filename = to restore unstaged the file
35) git checkout -f = to discard all changes of all unstaged files
36) git remote -v = to show the fetch and push origin
37) eval $(ssh-agent -s) = to run the ssh-agent pid
38) ssh-keygen -t ed25519 -C "Your_email@gmail.com" = to generate ssh key
39) ssh-add ~/.ssh/id_ed25519 = to add ssh key
40) tail ~/.ssh/id_25519.pub = to show the ssh key
41) git config --global alias.cmd 'command' = to configure new short command
42) git checkout -b branchname = to create a new branch
43) git checkout branchname = to switch branch to branchname
44) git branch = to show the all branches
45) git merge branchname = to merge branchname to master
46) git branch -v = to show the all branches last commit hash and msg
47) git branch --merged = to show all merged branches
48) git branch --no-merged = to show all no merged branches
49) git branch -d branchname = to delete branchname
50) git branch -D branchname = to delete branchname without any error
51) git push origin branchname:newbranchname = to push branchname as a new newbranchname
52) git push -d origin branchname = to delete branch in origin
53) git push origin branchname = to push new branch in origin
